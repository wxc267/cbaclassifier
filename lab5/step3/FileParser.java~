

import java.io.BufferedReader;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;


public class FileParser {
	
	public static List<ReuterDoc> parse(String fileName)
	{
		List<ReuterDoc> reuterList=new ArrayList<ReuterDoc>();
		Document doc;
		try {
			
			doc = Jsoup.parse(new File(fileName), "UTF-8");
			Elements reuters=doc.select("REUTERS");
			int size=reuters.size();
			for(int i=0;i<size;i++)
			{
				Element reuter=reuters.get(i);
				ReuterDoc reuterDoc=new ReuterDoc();	
				
				Element title=reuter.select("TITLE").first();
				Element topics=reuter.select("TOPICS").first();
				Element text=reuter.select("TEXT").first();
				List<String> topicList=new ArrayList<String>();
				for(int j=0;j<topics.childNodeSize();j++)
				{
					Element topic=topics.child(j);
					topicList.add(topic.text());
				}
				if(topicList.size()>0){
					if(title!=null){
						reuterDoc.title=title.text();
					}else
					{
						reuterDoc.title="Document "+i;
					}
					reuterDoc.topics=topicList;
					reuterDoc.body=text.text();
					reuterList.add(reuterDoc);
				}
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}  
        return reuterList;
	}
	public static List<AssociationRule> parseRule(String fileName) throws IOException
	{
		List<AssociationRule> ruleList=new ArrayList<AssociationRule>();
		BufferedReader reader=new BufferedReader(new FileReader(fileName));
		String line=reader.readLine();
		while(line!=null)
		{
			AssociationRule rule=new AssociationRule();
			String[] splitedLine=line.split(" ");
			rule.topicClass=splitedLine[0];
			String confidenceString=splitedLine[splitedLine.length-1];
			int end=confidenceString.length()-1;
			confidenceString=confidenceString.substring(0,end);
			double confidence=Double.parseDouble(confidenceString);
			rule.confidence=confidence;
			String supportString=splitedLine[splitedLine.length-2];
			end=supportString.length()-1;
			supportString=supportString.substring(1, end);
			double support=Double.parseDouble(supportString);
			rule.support=support;
			Set<String> keys=new HashSet<String>();
			for(int i=2;i<splitedLine.length-2;i++)
			{
				keys.add(splitedLine[i]);
			}
			rule.keywords=keys;
			ruleList.add(rule);
			line=reader.readLine();
		}
		reader.close();
		return ruleList;
	}
	public static List<Set<String>> putToSet(String fileName) throws IOException
	{
		List<Set<String>> result=new ArrayList<Set<String>>();
		BufferedReader reader=new BufferedReader(new FileReader(fileName));
		String line=reader.readLine();
		while(line!=null)
		{
			String[] words=line.split(" ");
			Set<String> set=new HashSet<String>();
			for(int i=0;i<words.length;i++)
			{
				set.add(words[i]);
			}
			result.add(set);
			line=reader.readLine();
		}
		reader.close();
		return result;
	}
}
